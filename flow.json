{
  "description": "OFA_Chatbot",
  "states": [
    {
      "name": "Trigger",
      "type": "trigger",
      "transitions": [
        {
          "next": "setLanguage",
          "event": "incomingMessage"
        },
        {
          "event": "incomingCall"
        },
        {
          "next": "sendOutgoingMessage",
          "event": "incomingRequest"
        }
      ],
      "properties": {
        "offset": {
          "x": 1070,
          "y": -1470
        }
      }
    },
    {
      "name": "sendNoThanks",
      "type": "send-message",
      "transitions": [
        {
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 1070,
          "y": 3070
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.sendNoThanks}}"
      }
    },
    {
      "name": "askLanguage",
      "type": "send-and-wait-for-reply",
      "transitions": [
        {
          "next": "setLanguage2",
          "event": "incomingMessage"
        },
        {
          "event": "timeout"
        },
        {
          "event": "deliveryFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": 1030,
          "y": 220
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "body": "{{widgets.Messages.parsed.askLanguage}}",
        "timeout": "3600"
      }
    },
    {
      "name": "sendWelcome",
      "type": "send-and-wait-for-reply",
      "transitions": [
        {
          "next": "splitWelcome",
          "event": "incomingMessage"
        },
        {
          "event": "timeout"
        },
        {
          "event": "deliveryFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": -380,
          "y": -370
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "body": "{{widgets.Messages.parsed.welcome}}",
        "timeout": "3600"
      }
    },
    {
      "name": "errorOption",
      "type": "send-message",
      "transitions": [
        {
          "next": "sendWelcome",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": -880,
          "y": -90
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.errorOption}}"
      }
    },
    {
      "name": "askLearnAbout",
      "type": "send-and-wait-for-reply",
      "transitions": [
        {
          "next": "logLearn",
          "event": "incomingMessage"
        },
        {
          "event": "timeout"
        },
        {
          "event": "deliveryFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": -600,
          "y": 430
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "body": "{{widgets.Messages.parsed.askLearnAbout}}",
        "timeout": "3600"
      }
    },
    {
      "name": "splitLearnAbout",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "errorLearnAbout",
          "event": "noMatch"
        },
        {
          "next": "askBenefit",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-1",
              "arguments": [
                "{{widgets.askLearnAbout.inbound.Body}}"
              ],
              "type": "matches_any_of",
              "value": "Benefit Programs, Benefits, 1, Programas de Beneficios, Programas, Beneficios, Pwogram Benefis, Benefis, Chương Trình Phúc Lợi, Phúc Lợi, 福利计划，福利,  برامج الإعانات، الإعانات, Programas di Benefissius, Benefissius, Programas de Beneficios, Beneficios, Brograamyada Manaafacaadka "
            }
          ]
        },
        {
          "next": "askPickup",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-2",
              "arguments": [
                "{{widgets.askLearnAbout.inbound.Body}}"
              ],
              "type": "matches_any_of",
              "value": "2, Pickup, Pick Up, Where to Pick Up Food, Donde Recoger Comida, Recoger, Recoger Comida, Pikòp, Pickup, Kikote pou vin chèche manje, Lấy, Lấy, Nơi Lấy Thực Phẩm, 取件，取件，取食物的地点, الحصول على، الاستلام، أين أحصل على الطعام, Buska, Pa Buska, Undé ki ta Buskadu Komida, Busca de Alimentos, Busca de Alimentos, Onde Buscar os Alimentos, Meesha Laga Qaato Raashinka"
            }
          ]
        },
        {
          "next": "sendDelivery",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-3",
              "arguments": [
                "{{widgets.askLearnAbout.inbound.Body}}"
              ],
              "type": "matches_any_of",
              "value": "3, Food Delivery, Delivery, Get Food Delivered, 3, Domicilios de Comida, Domicilio de Víveres de Bajo Costo, Domicilios, Livrezon Manje, Livrezon, Jwenn Livrezon Manje, Giao Thực Phẩm, Giao, Nhận Giao Thực Phẩm, 食物配送，配送，让食物配送到府,  خدمة توصيل الطعام، توصيل، الحصول على خدمة توصيل الطعام, Entrega di Komida, Entrega, Pidi Entrega di Komida, Alimentos Entregues em casa, Entrega de Alimentos, Ter os Alimentos Entregues em casa, In Ley Keeno Raashin"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.askLearnAbout.inbound.Body}}",
        "offset": {
          "x": -660,
          "y": 1000
        }
      }
    },
    {
      "name": "splitWelcome",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "errorOption",
          "event": "noMatch"
        },
        {
          "next": "askLearnAbout",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "YES",
              "arguments": [
                "{{widgets.sendWelcome.inbound.Body}}"
              ],
              "type": "matches_any_of",
              "value": "SI, Sí, YES, Y, WI, W, CÓ, 是, نعم، نعم, SIN, SIM, S, HAA"
            }
          ]
        },
        {
          "next": "askLanguage",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "NO",
              "arguments": [
                "{{widgets.sendWelcome.inbound.Body}}"
              ],
              "type": "matches_any_of",
              "value": "No, N, NON, KHÔNG, 否, لا، لا, NAU, NÃO, MAYA"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.sendWelcome.inbound.Body}}",
        "offset": {
          "x": -380,
          "y": -100
        }
      }
    },
    {
      "name": "errorLearnAbout",
      "type": "send-message",
      "transitions": [
        {
          "next": "askLearnAbout",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": -1210,
          "y": 820
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.errorLearnAbout}}"
      }
    },
    {
      "name": "askBenefit",
      "type": "send-and-wait-for-reply",
      "transitions": [
        {
          "next": "logBenefit",
          "event": "incomingMessage"
        },
        {
          "event": "timeout"
        },
        {
          "event": "deliveryFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": -890,
          "y": 1320
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "body": "{{widgets.Messages.parsed.askBenefit}}",
        "timeout": "3600"
      }
    },
    {
      "name": "splitBenefit",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "errorBenefit",
          "event": "noMatch"
        },
        {
          "next": "sendSNAP",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-a",
              "arguments": [
                "{{widgets.askBenefit.inbound.Body}}"
              ],
              "type": "equal_to",
              "value": "A"
            }
          ]
        },
        {
          "next": "sendWIC",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-b",
              "arguments": [
                "{{widgets.askBenefit.inbound.Body}}"
              ],
              "type": "equal_to",
              "value": "B"
            }
          ]
        },
        {
          "next": "sendHIP",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-c",
              "arguments": [
                "{{widgets.askBenefit.inbound.Body}}"
              ],
              "type": "equal_to",
              "value": "C"
            }
          ]
        },
        {
          "next": "sendDoubleUp",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-d",
              "arguments": [
                "{{widgets.askBenefit.inbound.Body}}"
              ],
              "type": "equal_to",
              "value": "D"
            }
          ]
        },
        {
          "next": "askLearnAbout",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-back",
              "arguments": [
                "{{widgets.askBenefit.inbound.Body}}"
              ],
              "type": "matches_any_of",
              "value": "ATRAS, GO BACK, BACK, FÈ BAK, QUAY LẠI, 返回, 回, الرجوع للخلف, VOLTA PA TRAZ, VOLTA, VOLTAR, GADAAL U NOQO"
            }
          ]
        },
        {
          "next": "sendNoThanks",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-stop",
              "arguments": [
                "{{widgets.askBenefit.inbound.Body}}"
              ],
              "type": "matches_any_of",
              "value": "END SESSION, END, PARAR, FÈMEN SESYON, FÈMEN, END SESSION, KẾT THÚC PHIÊN, END SESSION, END, 结束谈话, إنهاء الجلسة, FINDA SESSON, FINDA, ENCERRAR a SESSÃO, ENCERRAR, JOOJIN"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.askBenefit.inbound.Body}}",
        "offset": {
          "x": -1170,
          "y": 1890
        }
      }
    },
    {
      "name": "askPickup",
      "type": "send-and-wait-for-reply",
      "transitions": [
        {
          "next": "getPickup",
          "event": "incomingMessage"
        },
        {
          "event": "timeout"
        },
        {
          "event": "deliveryFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": -160,
          "y": 1250
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "body": "{{widgets.Messages.parsed.askPickup}}",
        "timeout": "3600"
      }
    },
    {
      "name": "splitPickup",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "errorPickup",
          "event": "noMatch"
        },
        {
          "next": "sendFoodPantry",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-a",
              "arguments": [
                "{{widgets.askPickup.inbound.Body}}"
              ],
              "type": "equal_to",
              "value": "A"
            }
          ]
        },
        {
          "next": "sendFarmersMarket",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-b",
              "arguments": [
                "{{widgets.askPickup.inbound.Body}}"
              ],
              "type": "equal_to",
              "value": "B"
            }
          ]
        },
        {
          "next": "sendYouthMeals",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-c",
              "arguments": [
                "{{widgets.askPickup.inbound.Body}}"
              ],
              "type": "equal_to",
              "value": "C"
            }
          ]
        },
        {
          "next": "sendFairFoods",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-d",
              "arguments": [
                "{{widgets.askPickup.inbound.Body}}"
              ],
              "type": "equal_to",
              "value": "D"
            }
          ]
        },
        {
          "next": "sendFreshTruck",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-e",
              "arguments": [
                "{{widgets.askPickup.inbound.Body}}"
              ],
              "type": "equal_to",
              "value": "E"
            }
          ]
        },
        {
          "next": "sendDoubleUp",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-f",
              "arguments": [
                "{{widgets.askPickup.inbound.Body}}"
              ],
              "type": "equal_to",
              "value": "F"
            }
          ]
        },
        {
          "next": "askLearnAbout",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-back",
              "arguments": [
                "{{widgets.askPickup.inbound.Body}}"
              ],
              "type": "matches_any_of",
              "value": "ATRAS, GO BACK, BACK, FÈ BAK, QUAY LẠI, 返回, 回, الرجوع للخلف, VOLTA PA TRAZ, VOLTA, VOLTAR, GADAAL U NOQO"
            }
          ]
        },
        {
          "next": "sendNoThanks",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-stop",
              "arguments": [
                "{{widgets.askPickup.inbound.Body}}"
              ],
              "type": "matches_any_of",
              "value": "END SESSION, END, PARAR, FÈMEN SESYON, FÈMEN, END SESSION, KẾT THÚC PHIÊN, END SESSION, END, 结束谈话, إنهاء الجلسة, FINDA SESSON, FINDA, ENCERRAR a SESSÃO, ENCERRAR, JOOJIN"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.askPickup.inbound.Body}}",
        "offset": {
          "x": -200,
          "y": 1970
        }
      }
    },
    {
      "name": "sendDelivery",
      "type": "send-message",
      "transitions": [
        {
          "next": "delayAskLearnMore",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 710,
          "y": 1750
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.sendDelivery}}"
      }
    },
    {
      "name": "askLearnMore",
      "type": "send-and-wait-for-reply",
      "transitions": [
        {
          "next": "splitLearnMore",
          "event": "incomingMessage"
        },
        {
          "event": "timeout"
        },
        {
          "event": "deliveryFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": 1830,
          "y": 3910
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "body": "{{widgets.Messages.parsed.askLearnMore}}",
        "timeout": "3600"
      }
    },
    {
      "name": "splitLearnMore",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "errorLearnMore",
          "event": "noMatch"
        },
        {
          "next": "askLearnAbout",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-yes",
              "arguments": [
                "{{widgets.askLearnMore.inbound.Body}}"
              ],
              "type": "matches_any_of",
              "value": "SI, Sí, YES, Y, WI, W, CÓ, 是, نعم، نعم, SIN, SIM, S, HAA"
            }
          ]
        },
        {
          "next": "sendNoThanks",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-no",
              "arguments": [
                "{{widgets.askLearnMore.inbound.Body}}"
              ],
              "type": "matches_any_of",
              "value": "No, N, NON, KHÔNG, 否, لا، لا, NAU, NÃO, MAYA"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.askLearnMore.inbound.Body}}",
        "offset": {
          "x": 1680,
          "y": 1020
        }
      }
    },
    {
      "name": "sendHIP",
      "type": "send-message",
      "transitions": [
        {
          "next": "askSNAP",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": -1010,
          "y": 2220
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.sendHIP}}"
      }
    },
    {
      "name": "sendWIC",
      "type": "send-message",
      "transitions": [
        {
          "next": "delayAskLearnMore",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": -1390,
          "y": 2270
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.sendWIC}}"
      }
    },
    {
      "name": "sendDoubleUp",
      "type": "send-message",
      "transitions": [
        {
          "next": "askSNAP",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": -680,
          "y": 2220
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.sendDoubleUp}}"
      }
    },
    {
      "name": "sendFoodPantry",
      "type": "send-message",
      "transitions": [
        {
          "next": "delayAskLearnMore",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": -350,
          "y": 2220
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.sendFoodPantry}}"
      }
    },
    {
      "name": "sendFarmersMarket",
      "type": "send-message",
      "transitions": [
        {
          "next": "askHIP",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 0,
          "y": 2220
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.sendFarmersMarket}}"
      }
    },
    {
      "name": "sendYouthMeals",
      "type": "send-message",
      "transitions": [
        {
          "next": "delayAskLearnMore",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 340,
          "y": 2220
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.sendYouthMeals}}"
      }
    },
    {
      "name": "askSNAP",
      "type": "send-and-wait-for-reply",
      "transitions": [
        {
          "next": "splitSNAP2",
          "event": "incomingMessage"
        },
        {
          "event": "timeout"
        },
        {
          "event": "deliveryFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": -910,
          "y": 2530
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "body": "{{widgets.Messages.parsed.askSNAP}}",
        "timeout": "3600"
      }
    },
    {
      "name": "splitSNAP2",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "errorSNAP",
          "event": "noMatch"
        },
        {
          "next": "getSNAPenroll",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-yes",
              "arguments": [
                "{{widgets.askSNAP.inbound.Body}}"
              ],
              "type": "matches_any_of",
              "value": "YES, Y, SI, WI, W, YES, CÓ, Y, YES, HAA Y, 是, نعم، نعم, SIN, S, SIM, S, "
            }
          ]
        },
        {
          "next": "sendSNAPNoEnroll",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-no",
              "arguments": [
                "{{widgets.askSNAP.inbound.Body}}"
              ],
              "type": "matches_any_of",
              "value": "No, N, NON, KHÔNG, 否, لا، لا, NAU, MAYA, NÃO, "
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.askSNAP.inbound.Body}}",
        "offset": {
          "x": -1160,
          "y": 2750
        }
      }
    },
    {
      "name": "askHIP",
      "type": "send-and-wait-for-reply",
      "transitions": [
        {
          "next": "splitHIP",
          "event": "incomingMessage"
        },
        {
          "event": "timeout"
        },
        {
          "event": "deliveryFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": 10,
          "y": 2540
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "body": "{{widgets.Messages.parsed.askHIP}}",
        "timeout": "3600"
      }
    },
    {
      "name": "splitHIP",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "errorHIP",
          "event": "noMatch"
        },
        {
          "next": "sendHIP",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-yes",
              "arguments": [
                "{{widgets.askHIP.inbound.Body}}"
              ],
              "type": "matches_any_of",
              "value": "YES, Y, SI, WI, W, YES, CÓ, Y, YES, Y, 是, نعم، نعم, SIN, S, SIM, S, HAA"
            }
          ]
        },
        {
          "next": "askPickup",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-back",
              "arguments": [
                "{{widgets.askHIP.inbound.Body}}"
              ],
              "type": "matches_any_of",
              "value": "ATRAS, GO BACK, BACK, FÈ BAK, QUAY LẠI, 返回, 回, الرجوع للخلف, VOLTA PA TRAZ, VOLTA, VOLTAR, GADAAL U NOQO "
            }
          ]
        },
        {
          "next": "sendNoThanks",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-stop",
              "arguments": [
                "{{widgets.askHIP.inbound.Body}}"
              ],
              "type": "equal_to",
              "value": "END SESSION, END, PARAR, FÈMEN SESYON, FÈMEN, END SESSION, KẾT THÚC PHIÊN, END SESSION, END, 结束谈话, إنهاء الجلسة, FINDA SESSON, FINDA, ENCERRAR a SESSÃO, ENCERRAR, JOOJIN"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.askHIP.inbound.Body}}",
        "offset": {
          "x": -100,
          "y": 2750
        }
      }
    },
    {
      "name": "sendFairFoods",
      "type": "send-message",
      "transitions": [
        {
          "next": "delayAskLearnMore",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 690,
          "y": 2220
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.sendFairFoods}}"
      }
    },
    {
      "name": "sendFreshTruck",
      "type": "send-message",
      "transitions": [
        {
          "next": "askHIP",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 1040,
          "y": 2220
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.sendFreshTruck}}"
      }
    },
    {
      "name": "errorPickup",
      "type": "send-message",
      "transitions": [
        {
          "next": "askPickup",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 960,
          "y": 1970
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.errorPickup}}"
      }
    },
    {
      "name": "errorBenefit",
      "type": "send-message",
      "transitions": [
        {
          "next": "askBenefit",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": -1530,
          "y": 1640
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.errorBenefit}}"
      }
    },
    {
      "name": "errorSNAP",
      "type": "send-message",
      "transitions": [
        {
          "next": "askSNAP",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": -2030,
          "y": 2940
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.errorSNAP}}"
      }
    },
    {
      "name": "errorHIP",
      "type": "send-message",
      "transitions": [
        {
          "next": "askHIP",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": -410,
          "y": 2540
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.errorHIP}}"
      }
    },
    {
      "name": "sendSNAP",
      "type": "send-and-wait-for-reply",
      "transitions": [
        {
          "next": "splitSNAP1",
          "event": "incomingMessage"
        },
        {
          "event": "timeout"
        },
        {
          "event": "deliveryFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": -1720,
          "y": 2230
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "body": "{{widgets.Messages.parsed.sendSNAP}}",
        "timeout": "3600"
      }
    },
    {
      "name": "sendSNAPEnroll",
      "type": "send-message",
      "transitions": [
        {
          "next": "delayAskLearnMore",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": -1350,
          "y": 3380
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.sendSNAPEnroll}}"
      }
    },
    {
      "name": "splitSNAP1",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "errorSNAP",
          "event": "noMatch"
        },
        {
          "next": "getSNAPenroll",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-yes",
              "arguments": [
                "{{widgets.sendSNAP.inbound.Body}}"
              ],
              "type": "matches_any_of",
              "value": "YES, Y, S, SI, SÍ, WI, W, YES, CÓ, Y, YES, Y, 是, نعم، نعم, SIN, S, SIM, S, HAA"
            }
          ]
        },
        {
          "next": "sendSNAPNoEnroll",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "if-no",
              "arguments": [
                "{{widgets.sendSNAP.inbound.Body}}"
              ],
              "type": "matches_any_of",
              "value": "No, N, NON, KHÔNG, 否, لا، لا, NAU, NÃO, MAYA"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.sendSNAP.inbound.Body}}",
        "offset": {
          "x": -1770,
          "y": 2490
        }
      }
    },
    {
      "name": "errorLearnMore",
      "type": "send-message",
      "transitions": [
        {
          "next": "delayAskLearnMore",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 1530,
          "y": 1520
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.errorLearnMore}}"
      }
    },
    {
      "name": "logBenefit",
      "type": "make-http-request",
      "transitions": [
        {
          "next": "splitBenefit",
          "event": "success"
        },
        {
          "next": "splitBenefit",
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": -1010,
          "y": 1620
        },
        "method": "POST",
        "content_type": "application/x-www-form-urlencoded;charset=utf-8",
        "body": "1, Programas de Beneficios, Programas, Beneficios ",
        "parameters": [
          {
            "value": "{{widgets.askBenefit.inbound.Body}}",
            "key": "benefitchoice"
          },
          {
            "value": "{{widgets.askBenefit.inbound.From}}",
            "key": "PhoneNumber"
          }
        ],
        "url": "https://mantis-cuscus-7403.twil.io/write-ofa"
      }
    },
    {
      "name": "getPickup",
      "type": "make-http-request",
      "transitions": [
        {
          "next": "splitPickup",
          "event": "success"
        },
        {
          "next": "splitPickup",
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": -590,
          "y": 1640
        },
        "method": "POST",
        "content_type": "application/x-www-form-urlencoded;charset=utf-8",
        "body": "2, Donde Recoger Comida, Recoger, Recoger Comida",
        "parameters": [
          {
            "value": "{{widgets.askPickup.inbound.Body}}",
            "key": "pickupchoice"
          },
          {
            "value": "{{widgets.askPickup.inbound.From}}",
            "key": "PhoneNumber"
          }
        ],
        "url": "https://mantis-cuscus-7403.twil.io/write-ofa"
      }
    },
    {
      "name": "logLearn",
      "type": "make-http-request",
      "transitions": [
        {
          "next": "splitLearnAbout",
          "event": "success"
        },
        {
          "next": "splitLearnAbout",
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": -610,
          "y": 720
        },
        "method": "POST",
        "content_type": "application/x-www-form-urlencoded;charset=utf-8",
        "parameters": [
          {
            "value": "{{widgets.askLearnAbout.inbound.Body}}",
            "key": "learnchoice"
          },
          {
            "value": "{{widgets.askLearnAbout.inbound.From}}",
            "key": "PhoneNumber"
          }
        ],
        "url": "https://mantis-cuscus-7403.twil.io/write-ofa"
      }
    },
    {
      "name": "setLanguage",
      "type": "set-variables",
      "transitions": [
        {
          "next": "logInitialMessage",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "{% assign text = trigger.message.Body | downcase | rstrip %}\n{%-  case text  -%}\n{%- when 'comida' or 'cancelar' -%}\nSPA\n{%- when 'food' or 'nothanks' or 'no thanks' -%}\nENG\n{%- when 'manje' -%}\nHCR\n{%- when 'thức ăn' -%}\nVIE\n{%- when '食物' -%}\nCHI\n{%- when 'طعام' -%}\nARA\n{%- when 'komida' -%}\nCVC\n{%- when 'alimento' -%}\nPOR\n{%- when 'raashin' or 'maya mahadsanid' -%}\nSOM\n{%- endcase -%}",
            "key": "language"
          }
        ],
        "offset": {
          "x": 500,
          "y": -1310
        }
      }
    },
    {
      "name": "Messages",
      "type": "run-function",
      "transitions": [
        {
          "next": "cancelCheck",
          "event": "success"
        },
        {
          "event": "fail"
        }
      ],
      "properties": {
        "offset": {
          "x": 200,
          "y": -830
        },
        "parameters": [
          {
            "value": "{{flow.variables.language}}",
            "key": "language"
          }
        ],
        "url": "https://mantis-cuscus-7403.twil.io/messages"
      }
    },
    {
      "name": "setLanguage2",
      "type": "set-variables",
      "transitions": [
        {
          "next": "Messages",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "{% assign text = widgets.askLanguage.inbound.Body | downcase | rstrip %}\n{%-  case text  -%}\n{%- when '1'  or 'spa' or 'esp' or 'spanish' or 'español' or 'espanhol' or 'spanhol' or 'الإسبانية' or '西班牙语' or 'tiếng tây ban nha' or 'panyòl' or 'espanol' or 'isbanish'-%}\nSPA\n{%- when '0' or 'eng' or 'english' or 'inglés' or 'ingles' or 'anglè' or 'tiếng anh' or '英语' or 'الإنكليزية' or 'inglês' or 'ingiriisi'-%}\nENG\n{%- when '2' or 'simplified chinese' or 'chinese' or 'chi' or 'chino' or 'chino simplificado' or 'chinwa' or 'chinwa senplifye' or 'tiếng trung giản thể' or '简体中文' or 'الصينية المبسّطة' or 'xines sinplifikadu' or 'chinês' or 'shiinaha la fududeyay'-%}\nCHI\n{%- when '3' or 'haitian creole' or 'criollo haitiano' or 'haitiano' or 'kreyòl ayisyen' or 'tiếng creole haiti' or '海地克里奥尔语' or 'كريول هايتي' or 'kriolu di haiti' or 'haitian creole'-%}\nHCR\n{%- when '4' or 'vietnamese' or 'viet' or 'vietnamita' or 'vyetnamyen' or 'tiếng việt' or  '越南语' or 'الفيتنامية' or 'fietnamees'-%}\nVIE\n{%- when '5' or 'cabo verdean creole' or 'cape verdean creole' or 'cape verdean' or 'cabo verdean' or 'caboverdeano' or  'criollo caboverdeano' or 'kreyòl kap vè' or 'tiếng creole cabo verde' or '佛得角克里奥尔语' or 'كريول الرأس الأخض' or 'kriolu di cabu verdi' or 'kriolu' or 'cabo verdiano' or 'cabo-verdiano' or 'criolu' or 'cabo verdean creole'-%}\nCVC\n{%- when '6' or 'portuguese' or 'por' or 'port' or 'portugues' or 'portugués' or 'pòtigè' or 'tiếng bồ đào nha' or '葡萄牙语' or 'البرتغالية' or 'português' or 'bortuqiis'-%}\nPOR\n{%- when '7' or 'arab' or 'arabic' or 'ara' or 'árabe' or 'arabe' or 'tiếng ả rập' or '阿拉伯语' or 'العربية' or 'arabi' or 'carabi'-%}\nARA\n{%- endcase -%}",
            "key": "language"
          }
        ],
        "offset": {
          "x": 1090,
          "y": 530
        }
      }
    },
    {
      "name": "sendOutgoingMessage",
      "type": "send-message",
      "transitions": [
        {
          "next": "logReferralContacted",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 1550,
          "y": -1310
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{flow.data.to}}",
        "body": "{{flow.data.message}}"
      }
    },
    {
      "name": "cancelCheck",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "sendWelcome",
          "event": "noMatch"
        },
        {
          "next": "sendNoThanks2",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "CANCEL",
              "arguments": [
                "{{trigger.message.Body}}"
              ],
              "type": "matches_any_of",
              "value": "no thanks, NO THANKS, NOTHANKS, nothanks, cancelar, Cancelar, CANCELAR, HỦY, hủy, 取消, ANILE, anile, إلغاء, KANSELA, kansela, maya mahadsanid, MAYA MAHADSANID"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{trigger.message.Body}}",
        "offset": {
          "x": -100,
          "y": -600
        }
      }
    },
    {
      "name": "sendNoThanks2",
      "type": "send-message",
      "transitions": [
        {
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 190,
          "y": -310
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.sendNoThanks}}"
      }
    },
    {
      "name": "getSNAPenroll",
      "type": "make-http-request",
      "transitions": [
        {
          "next": "sendSNAPEnroll",
          "event": "success"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": -1280,
          "y": 3130
        },
        "method": "POST",
        "content_type": "application/x-www-form-urlencoded;charset=utf-8",
        "parameters": [
          {
            "value": "{{widgets.askSNAP.inbound.Body}} {{widgets.askSNAP.inbound.Body}} {{widgets.askSNAP.inbound.Body}}",
            "key": "enrollSNAP"
          },
          {
            "value": "{{widgets.askBenefit.inbound.From}}",
            "key": "PhoneNumber"
          },
          {
            "value": "{{widgets.sendSNAP.inbound.Body}}",
            "key": "enrollSNAP"
          }
        ],
        "url": "https://mantis-cuscus-7403.twil.io/write-ofa"
      }
    },
    {
      "name": "delayAskLearnMore",
      "type": "run-function",
      "transitions": [
        {
          "next": "askLearnMore",
          "event": "success"
        },
        {
          "event": "fail"
        }
      ],
      "properties": {
        "offset": {
          "x": 1460,
          "y": 3680
        },
        "url": "https://mantis-cuscus-7403.twil.io/delay"
      }
    },
    {
      "name": "sendSNAPNoEnroll",
      "type": "send-message",
      "transitions": [
        {
          "next": "delayAskLearnMore",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": -710,
          "y": 3270
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "{{flow.channel.address}}",
        "to": "{{contact.channel.address}}",
        "body": "{{widgets.Messages.parsed.sendSNAPNoEnroll}}"
      }
    },
    {
      "name": "logInitialMessage",
      "type": "make-http-request",
      "transitions": [
        {
          "next": "Messages",
          "event": "success"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 240,
          "y": -1090
        },
        "method": "POST",
        "content_type": "application/x-www-form-urlencoded;charset=utf-8",
        "parameters": [
          {
            "value": "{{trigger.message.Body}}",
            "key": "triggerMessage"
          },
          {
            "value": "{{trigger.message.From}}",
            "key": "PhoneNumber"
          },
          {
            "value": "{{flow.variables.language}}",
            "key": "language"
          }
        ],
        "url": "https://mantis-cuscus-7403.twil.io/write-ofa"
      }
    },
    {
      "name": "logReferralContacted",
      "type": "make-http-request",
      "transitions": [
        {
          "event": "success"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 1560,
          "y": -1070
        },
        "method": "POST",
        "content_type": "application/x-www-form-urlencoded;charset=utf-8",
        "parameters": [
          {
            "value": "{{flow.data.referral}}",
            "key": "referral"
          },
          {
            "value": "{{flow.data.to}}",
            "key": "PhoneNumber"
          },
          {
            "value": "{{flow.data.language}}",
            "key": "languageReferral"
          }
        ],
        "url": "https://mantis-cuscus-7403.twil.io/write-ofa"
      }
    }
  ],
  "initial_state": "Trigger",
  "flags": {
    "allow_concurrent_calls": true
  }
}
